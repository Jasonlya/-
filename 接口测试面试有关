    1、什么是接口？
接口就是API,应用程序编程接口。本质上是程序开发的函数和方法，提供参数和返回值。
    2、什么是接口测试？
接口测试是测试系统组件间接口的一种测试，主要用于检测外部系统和内部系统之间以及各个子系统之间的交互点。测试的重点是检查数据的交换、传递和控制管理的过程，以及系统间的相互逻辑依赖关系等
    3、接口组成的要素有哪些？
接口访问的地址、请求的方法、参数、返回值等。
（1）接口访问的地址 协议：//IP地址:端口号/应用名/功能名
（2）请求的方法get、post等
（3）参数 用户使用接口时，需要向接口提供的数据
（4）返回值 接口给用户的反馈结果
    4、Python的requests包是干什么的？
requests是一个HTTP库，作用是发送HTTP请求，获得响应，往往使用在网络爬虫，接口自动化测试中。
    5、如何使用Python的requests包？
（1）安装python
（2）安装requests模块
（3）创建.py文件
（4）导入requests模块
（5）编写python代码
（6）调用requests方法
    6、为什么开展接口测试？
接口测试属于集成测试、测试接入越早，就越能在项目早期发现问题，修复问题成本降低。
接口测试也是非常快速，UI自动化执行一个测试用例10s左右，接口用例执行一般毫秒级。
    7、为什么要写接口测试用例？
 （1）理清思路，避免漏测和重复测试。
 （2）提高测试效率、跟进测试进度、告诉领导做过、跟进重复性工作
 （3）更好的记录问题、发现问题、复现问题、同时这也是接口测试流程中一个产物。
    8、接口测试用例设计主要考虑哪些？
（1）功能是否正常
（2）功能是否按照接口文档实现
（3）接口功能是否以来业务逻辑
（4）异常情况（参数异常、数据异常）
（5）性能测试、安全测试等
    9、接口测试用例包含哪些内容？
用例名称、接口版本、接口地址、请求方式、前置条件、描述、请求头部、请求参数、状态码、后置处理、预期返回结果
    10、接口测试如何设计用例？
接口测试一般考虑入参形式的变化和接口的业务逻辑。
一般设计接口测试用例采用等价类、边界值、场景法居多。
接口测试用例设计思路：
（1）接口业务逻辑测试，根据业务逻辑，输入参数，输出值的描述，对正常输入情况下所得输出值是否正确的测试，也就是测试对外提供的接口服务是否正常
（2）模块接口测试，模块接口测试是为了保证数据的安全及程序在异常情况下的逻辑正确性而进行的测试模块
主要包括以下几个方面：
a.鉴权码token异常（为空、没有、错误、过期）
b.其他参数的异常，必填项的检查，参数的长度、类型、格式异常。常规参数有数字，字符串，日期；参数长度，位数、身份证、电话的长度；参数的类型，数字精度，字母，中文，带空格的参数，特殊字符；日期格式，日期年月日，年月日时分秒，日期格式
c.错误码异常覆盖
    11、通用接口用例设计？
（1）通过性验证：首先要保证这个接口功能是好使的，也就是正常的通过性测试，按照接口文档上的参数，正常传入，是否可以返回正确的结果。
（2）参数组合：通过参数的不同组合来验证不同的业务逻辑
（3）接口安全
（4）异常验证：不按照接口文档上的要求输入参数，来验证接口对异常情况的校验。比如必填的参数不填，输入整数类的，传入字符串类型
    12、接口测试报告包含哪些内容？
（1）系统接口概述
（2）测试的目的与范围
（3）测试工具与资源
（4）测试记录及结果分析（单场景接口、混合场景接口）
（5）测试结论
    13、测试指标范围包含哪些？
（1）被测接口接收请求和返回报文
（2）被测接口返回状态、被测接口对应业务逻辑处理、涉及数据沉淀处理、复杂场景下多个接口串联交互
    14、做接口测试运用过哪些测试工具？
SoapUI、Postman、jmeter、fiddler、HCL AppScan Standard、python+requests
    15、抓包工具用过哪些？
Fiddler、HCL AppScan Standard、Charles、Wireshark
    16、为什么进行抓包测试？
（1）接口没有标准的接口文档，测试人员只能抓包来获取接口信息。
（2）抓包可以迅速找到请求，通过抓包可以查看整个请求过程，以及响应过程，可以通过抓包来分辨前台还是后台bug
（3）通过抓包，可以查看是否有敏感信息泄露
（4）通过抓包进行测试，拦截请求，修改请求数据，查看对应响应结果，抓包本身就是接口测试的一部分
    17、TCP/IP参考模型有哪几层？
应用层、传输层、网络层、网络接口层
（1）应用层对应于OSI参考模型的高层（应用层、表示层、会话层），为用户提供所需要的各种服务，例如：HTTP、FTP、Telnet、DNS、SMTP等
该层的主要任务是将接受到的数据包按照协议解读成各种类型的数据，并将要发送的数据打包进传输层。
应用层包括了所有的高层协议，目前TCP/IP参考模型中的应用层协议主要包括一下几种：
网络终端协议：Telnet
文件传输协议：FTP
简单的邮件传输协议：SMTP
域名系统：DNS
简单网络管理协议：SNMP
超文本传输协议：HTTP
（2）传输层对应OSI中的传输层为应用层实体提供端到端的通信功能，保证了数据包的顺序传送及数据的完整性。该层定义了两个主要的协议：传输控制协议（TCP）和用户数据报协议（UDP）
在TCP/IP参考模型的传输层定义了以下两种协议：
TCP协议：TCP协议是一种可靠的面向连接的协议，它允许将一台主机的字节流无差错地传送到目标主机。TCP协议将应用层的字节流分成多个字节段，然后将一个个的字段传送到互联网络层，并最终发送到目标主机。当互联网络层将接收到的子节段传送给传输层时，传输层再将多个子节段还原成原始的字节流，并传送到应用层。TCP协议同时要完成流量控制功能，协调手法双方的发送与接受速度，以达到正确的传输目的
UDP协议：UDP协议是一种不可靠的无连接协议，它主要用于不要求分组顺序到达的传输服务之中，在基于UDP协议的传输服务中，分组的传输顺序检查与排序由应用层完成。UDP协议主要面向请求-应答式的交易型应用中，一次交易往往只有一来一回两次报文交换，假如为此而建立和撤销连接将导致网络开销过大，因此，在这种情况下使用UDP就非常有效。另外,UDP协议也常用月那些对可靠性要求不高，但要求网络的延迟较小的场合，如语音和视频数据的传送等
（3）网络层对应OSI中的网络层主要解决主机到主机的通信问题。它所包含的协议设计数据包在整个网络上的逻辑传输。注重重新赋予主机一个IP地址来完成对主机的寻址，它还负债数据包在多重网络中的路由。
该层有三个主要协议：网际协议（IP）、互联网管理协议（IGMP）、互联网控制报文协议（ICMP）
其中，IP协议是一种不可靠、无连接的数据报传送服务的协议，它提供的是一种“尽力而为”的服务。IP协议的协议数据单元是IP分组，由于在IP层提供数据报服务，因此，也常将IP分组称为IP数据报
a.负责将分组报文从源端发送到目的端
b.为网络中的设备提供逻辑地址
c.负责数据包的寻址和转发
（4）网络接口层与OSI参考模型中的物理层和数据链路层相对应。负责监视数据在主机和网络之间的交换。事实上，TCP/IP本身并未定义该层的协议，而由参与互连的各网络使用自己的物理层和数据链路层协议，然后与TCP/IP的网络接口层进行连接，地址解析协议（ARP）工作在磁层，即OSI中的数据链路层
网络接口层属于计算机网络的底层，使用的信道主要有点对点信道和广播信道两种类型。
• 在TCP/IP协议族中，网络接口层主要有三个目的：
a.为IP模块发送和接收数据
b.为ARP模块发送ARP请求和接收ARP应答
c.为RARP模块发送RARP请求和接收RARP应答
    18、常用协议的端口号？

    19、常见的状态码有哪些？

    20、你们公司的接口测试流程是怎样的？

    21、请详细阐述接口测试和UI测试在测试活动中是如何协同测试的？

    22、接口测试注意事项？

    23、接口测试执行中对比数据库吗？

    24、请简述一下cookie、session以及token的区别？

    25、谈谈你对HTTP协议的了解？

    26、你对http请求跟webservice请求的了解？

    27、在接口测试中关联是什么含义？如何使用Postman设置关联？

    28、接口自动化测试框架一般分为几层？

    29、测试框架里如何做到数据和代码分离？
